version=54;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=5;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=17;
	};
	class Camera
	{
		pos[]={4080.9138,26.219156,4087.0339};
		dir[]={0,-0.70710683,0.70710683};
		up[]={0,0.70710671,0.70710683};
	};
};
binarizationWanted=0;
sourceName="mission";
addons[]=
{
	"A3_Characters_F",
	"A3_Weapons_F_Mark_LongRangeRifles_DMR_02",
	"A3_Weapons_F_Mark",
	"A3_Missions_F_Oldman"
};
class AddonsMetaData
{
	class List
	{
		items=3;
		class Item0
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item1
		{
			className="A3_Weapons_F_Mark";
			name="Arma 3 Marksmen - Weapons and Accessories";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Missions_F_Oldman";
			name="Arma 3 Old Man - Playable Content";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
	};
};
dlcs[]=
{
	"Mark"
};
randomSeed=26735;
class ScenarioData
{
	author="7'erra";
};
class CustomAttributes
{
	class Category0
	{
		name="Scenario";
		class Attribute0
		{
			property="ENH_SPR";
			expression="if (!is3DEN && _value # 0 > 0 && !isMultiplayer) then      {        ENH_SPR_Ruleset = _value param [0, 0];        ENH_SPR_Delay = _value param [1, 20];        ENH_SPR_CanDie = _value param [2, false];        ENH_SPR_RestoreLoadout = _value param [3, false];        ENH_SPR_OnRespawnCode = compile (_value param [4, '']);        ENH_SPR_Positions =        [          allMapMarkers select {'respawn_east' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_west' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_guerilla' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_civilian' in toLower _x} apply {getMarkerPos _x}        ];        {          _x setVariable ['ENH_SPR_OriginalSide', side group _x];          _x setVariable ['ENH_SPR_OriginalLoadout', getUnitLoadout _x];          _x addEventHandler ['handleDamage',          {            params ['_unit', '', '_damage', '', '', '_index'];            if (!alive _unit || lifeState _unit isEqualTo 'INCAPACITATED') exitWith {0};            if (_unit getVariable ['ENH_SPR_Tickets', 0] == 0) then            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              _damage;            };            if (ENH_SPR_CanDie && _index in [1, 2] && _damage >= 1) exitWith            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              1;            };            if (_index < 8 && (_damage min 0.95) == 0.95) then            {              setAccTime 1;              _unit allowDamage false;              _unit setCaptive true;              _unit setUnconscious true;              _unit setVariable ['ENH_SPR_Tickets', (_unit getVariable ['ENH_SPR_Tickets', 0]) - 1];              if (isPlayer _unit) then {enableTeamSwitch false} else {removeSwitchableUnit _unit};              moveOut _unit;              _unit spawn ENH_fnc_SPR_respawnTimer;            };            _damage min 0.95;          }];        } forEach (allUnits select {_x getVariable ['ENH_SPR_Tickets', 0] > 0});                ENH_fnc_SPR_respawn =        {          scriptName 'ENH_Attribute_SPR_Respawn';          params ['_unit'];          if (isPlayer _unit) then {enableTeamSwitch true} else {addSwitchableUnit _unit};          if (ENH_SPR_RestoreLoadout) then {_unit setUnitLoadout (_unit getVariable 'ENH_SPR_OriginalLoadout')};          private _sideID = (_unit getVariable 'ENH_SPR_OriginalSide') call BIS_fnc_sideID;          private _positions = ENH_SPR_Positions select _sideID;          if (_positions isNotEqualTo []) then          {            switch (ENH_SPR_Ruleset) do            {              case 3:              {                _unit setPos (([_positions, [], {_unit distance _x}, 'ASCEND'] call BIS_fnc_sortBy) select 0);              };              case 2:              {                _unit setPos selectRandom _positions;              };            };          };          _unit setUnconscious false;          _unit allowDamage true;          _unit setDamage 0;          _unit switchMove '';          _unit call ENH_SPR_OnRespawnCode;          _unit spawn          {            sleep 8;            _this setCaptive false;          };        };                ENH_fnc_SPR_respawnTimer =        {          scriptName 'ENH_Attribute_SPR_RespawnTimer';          params ['_unit'];          private _respawnTime = time + ENH_SPR_Delay;          if (isPlayer _unit) then          {            private _ctrlRespawnTimer = (call BIS_fnc_displayMission) ctrlCreate ['RscStructuredText',-1];            _ctrlRespawnTimer ctrlSetPosition [0.25, 0, 0.5, 0.06];            _ctrlRespawnTimer ctrlSetBackgroundColor [0, 0, 0, 0.1];            _ctrlRespawnTimer ctrlCommit 0;            ENH_SPR_OriginalVolume = [soundVolume, musicVolume, radioVolume, speechVolume, environmentVolume];            0 cutText ['', 'BLACK OUT', 0.3];            0.3 fadeSound 0;            0.3 fadeMusic 0;            0.3 fadeRadio 0;            0.3 fadeSpeech 0;            0.3 fadeEnvironment 0;            showChat false;            while {time < _respawnTime} do            {              _ctrlRespawnTimer ctrlSetStructuredText parseText format ['<t size=''1.25'' color=''#218a36'' align=''center''>%1</t>', [(_respawnTime - time), 'HH:MM'] call BIS_fnc_timeToString];              sleep 0.1;            };            ctrlDelete _ctrlRespawnTimer;            0 cutText ['', 'BLACK IN', 8];            8 fadeSound (ENH_SPR_OriginalVolume # 0);            8 fadeMusic (ENH_SPR_OriginalVolume # 1);            8 fadeRadio (ENH_SPR_OriginalVolume # 2);            8 fadeSpeech (ENH_SPR_OriginalVolume # 3);            8 fadeEnvironment (ENH_SPR_OriginalVolume # 4);            showChat true;            [              ['Respawned'],              [format ['GRID: %1', mapGridPosition _unit]],              [format ['Tickets left: %1', _unit getVariable 'ENH_SPR_Tickets']]            ] spawn BIS_fnc_EXP_camp_SITREP;          }          else          {            if ((side player getFriend (_unit getVariable 'ENH_SPR_OriginalSide')) >= 0.6) then            {              [                str _unit, 'onEachFrame',                {                  drawIcon3D ['\a3\Modules_f\data\portraitRespawn_ca.paa', [0.13, 0.54, 0.21, 0.8], ASLToAGL ((_this # 0) modelToWorldVisualWorld [0, 0, 1]), 1, 1, 0, str round ((_this # 1) - time), 2];                },                [_unit, _respawnTime]              ] call BIS_fnc_addStackedEventHandler;            };            sleep ENH_SPR_Delay;          };          [str _unit, 'onEachFrame'] call BIS_fnc_removeStackedEventHandler;          _unit call ENH_fnc_SPR_respawn;        };      }";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"ARRAY"
						};
					};
					class value
					{
						items=5;
						class Item0
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=20;
							};
						};
						class Item2
						{
							class data
							{
								class type
								{
									type[]=
									{
										"BOOL"
									};
								};
								value=0;
							};
						};
						class Item3
						{
							class data
							{
								class type
								{
									type[]=
									{
										"BOOL"
									};
								};
								value=0;
							};
						};
						class Item4
						{
							class data
							{
								class type
								{
									type[]=
									{
										"STRING"
									};
								};
								value="";
							};
						};
					};
				};
			};
		};
		class Attribute1
		{
			property="EnableDebugConsole";
			expression="true";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"SCALAR"
						};
					};
					value=2;
				};
			};
		};
		nAttributes=2;
	};
};
class Mission
{
	class Intel
	{
		timeOfChanges=1800.0002;
		startWeather=0;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		year=2035;
		day=28;
		hour=13;
		minute=37;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=2;
		class Item0
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=2;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={4080,5.0014391,4108.0498};
					};
					side="West";
					flags=7;
					class Attributes
					{
						isPlayer=1;
						class Inventory
						{
							class primaryWeapon
							{
								name="srifle_DMR_02_F";
								class primaryMuzzleMag
								{
									name="10Rnd_338_Mag";
									ammoLeft=10;
								};
							};
							class uniform
							{
								typeName="U_B_Protagonist_VR";
								isBackpack=0;
							};
						};
					};
					id=7;
					type="B_Soldier_A_F";
				};
				class Item1
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={4075.905,5.0014391,4108.1328};
					};
					side="West";
					flags=5;
					class Attributes
					{
						isPlayable=1;
					};
					id=15;
					type="B_Pilot_F";
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Male11ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=1.03;
								};
							};
						};
						class Attribute2
						{
							property="VASS_cargo";
							expression="				if (					_value select [0,1] == '[' &&					_value select [count _value -1,1] == ']'				) then {					[_this, parseSimpleArray _value, 2] remoteExecCall ['TER_fnc_addShopCargo', 0, _this];				};";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="";
								};
							};
						};
						class Attribute3
						{
							property="VASS_addAction";
							expression="				if (_value isEqualType [] && {_value#0 && !is3DEN}) then {[_this, _value#1, _value#4,_value#2, _value#3] remoteExecCall [""TER_fnc_addShop"", 0, _this]};			";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"ARRAY"
										};
									};
									class value
									{
										items=5;
										class Item0
										{
											class data
											{
												class type
												{
													type[]=
													{
														"BOOL"
													};
												};
												value=0;
											};
										};
										class Item1
										{
											class data
											{
												class type
												{
													type[]=
													{
														"STRING"
													};
												};
												value="Shop";
											};
										};
										class Item2
										{
											class data
											{
												class type
												{
													type[]=
													{
														"STRING"
													};
												};
												value="alive _this && alive _target";
											};
										};
										class Item3
										{
											class data
											{
												class type
												{
													type[]=
													{
														"SCALAR"
													};
												};
												value=5;
											};
										};
										class Item4
										{
											class data
											{
												class type
												{
													type[]=
													{
														"SCALAR"
													};
												};
												value=1.5;
											};
										};
									};
								};
							};
						};
						nAttributes=4;
					};
				};
			};
			class Attributes
			{
			};
			id=6;
		};
		class Item1
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={4080.03,6.3607702,4112.3062};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=16;
			type="VirtualReammoBox_camonet_F";
			class CustomAttributes
			{
				class Attribute0
				{
					property="VASS_cargo";
					expression="				if (					_value select [0,1] == '[' &&					_value select [count _value -1,1] == ']'				) then {					[_this, parseSimpleArray _value, 2] remoteExecCall ['TER_fnc_addShopCargo', 0, _this];				};";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"STRING"
								};
							};
							value="[""SMG_03_black"",100,10]";
						};
					};
				};
				class Attribute1
				{
					property="VASS_addAction";
					expression="				if (_value isEqualType [] && {_value#0 && !is3DEN}) then {[_this, _value#1, _value#4,_value#2, _value#3] remoteExecCall [""TER_fnc_addShop"", 0, _this]};			";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"ARRAY"
								};
							};
							class value
							{
								items=5;
								class Item0
								{
									class data
									{
										class type
										{
											type[]=
											{
												"BOOL"
											};
										};
										value=1;
									};
								};
								class Item1
								{
									class data
									{
										class type
										{
											type[]=
											{
												"STRING"
											};
										};
										value="Shop";
									};
								};
								class Item2
								{
									class data
									{
										class type
										{
											type[]=
											{
												"STRING"
											};
										};
										value="alive _this && alive _target";
									};
								};
								class Item3
								{
									class data
									{
										class type
										{
											type[]=
											{
												"SCALAR"
											};
										};
										value=5;
									};
								};
								class Item4
								{
									class data
									{
										class type
										{
											type[]=
											{
												"SCALAR"
											};
										};
										value=1.5;
									};
								};
							};
						};
					};
				};
				nAttributes=2;
			};
		};
	};
};
